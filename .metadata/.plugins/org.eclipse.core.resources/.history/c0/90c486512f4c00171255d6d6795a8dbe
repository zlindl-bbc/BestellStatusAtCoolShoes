package ch.it.bzz.coolshoes.view;

public class EsdActions implements ActionListener {
    
    public void actionPerformed(java.awt.event.ActionEvent e) {     
             
            if(e.getSource()==release) {
                display.setText("SCARICATO!");
                shockDone = true;
     
            try{Thread.sleep(2000);}
            catch(InterruptedException err1){}
            release.setEnabled(false);
                //BEEP
                java.awt.Toolkit.getDefaultToolkit().beep();
                }
            //VT
            if(e.getSource()==tv) {
            display.setText("Tachicardia Ventricolare:" + 
                             " Verificare Assenza Pressione Arteriosa");
            polso.setEnabled(true);
            c200.setEnabled(false);
            print.setEnabled(true);
            arithmia.setText("Tachicardia Ventricolare con polso");     
                    }
            //VF
            if(e.getSource()==fv) {
            display.setText("Fibrillazione Ventricolare: PROCEDERE");
            c200.setEnabled(true);
            polso.setEnabled(false);
            print.setEnabled(true);
            arithmia.setText("Fibrillazione Ventricolare");
                    }
            //SR
            if(e.getSource()==rs) {
            display.setText("Ritmo Sinusale: NON PROCEDERE");
            c200.setEnabled(false);
            c360.setEnabled(false);
            polso.setEnabled(false);                
            print.setEnabled(true);
            arithmia.setText("Ritmo Sinusale");
                    }           
            //200 joule!
            if(e.getSource()==c200) {
            display.setText("Scarica da 200 Joule");
            c360.setEnabled(true);
            charge.setEnabled(true);
            shocksCounter200=true;
                if(shocksCounter200==true) {
                    c200.setEnabled(false);}
                    }
            //360 joule!
            if(e.getSource()==c360) {
            display.setText("Scarica da 360 Joule");
            shocksCounter360++;
                    } 
            //Reset fields
         
            if(e.getSource()==reset){
                     
                name.setText("");
                print.setText("");
                birthDate.setText("dd/mm/yyyy");
                print.setEnabled(false);
                c200.setEnabled(false);
                c360.setEnabled(false);
                charge.setEnabled(false);
                release.setEnabled(false);
                    } 

            //print 
            if(e.getSource()==print){
                                                 
                        //new window
                        JLabel effName = new JLabel();
                        JLabel effSurname = new JLabel();                         
                        effName.setText(name.getText());
                        effSurname.setText(surname.getText());
                        JLabel namePatient = new JLabel("Name"); 
                        JLabel surnamePatient = new JLabel("Surname");
                                                                         
                        if(shocksCounter200==false){
                        JLabel numScosse200 =
                                    new JLabel("sottoposto a n° 1 scarica da 200 joule");}
                        JLabel numScosse360 = new JLabel();
                        numScosse360.setText("sottoposto a n° "
              + shocksCounter360 + " scariche da 360 joule");

                        DesDataOraEX dataOraIntervento =
                                new DesDataOraEX();
                         
                        JFrame f = new JFrame(
                              "Output dell'operazione");
                        JPanel p = new JPanel();
                                                         
                        f.add(p);

                        GridBagLayout gblayout = new GridBagLayout();
                         
                        p.setLayout(gblayout);  
                        GridBagConstraints lim = new GridBagConstraints();  
                            lim.gridx = 0;
                            lim.gridy = 0;
                            gblayout.setConstraints(namePatient, lim);              
                            p.add(namePatient);
                             
                            lim.gridx = 0;
                            lim.gridy = 1;
                            gblayout.setConstraints(surnamePatient, lim);
                            p.add(surnamePatient);
                            lim.gridx = 1;
                            lim.gridy = 0;
                            gblayout.setConstraints(effName, lim);
                            p.add(effName);
                            lim.gridx = 1;
                            lim.gridy = 1;
                            gblayout.setConstraints(effSurname, lim);
                            p.add(effSurname);
                 
                            lim.gridx = 0;
                            lim.gridy = 2;
                            gblayout.setConstraints(arithmia, lim);
                            p.add(arithmia);

                                if((shocksCounter200==true) && (shockDone==true)){
                                JLabel Counter200 =
                               new JLabel("sottoposto a n° 1 scarica da 200 joule");
                                                                     
                                lim.gridx = 0;
                                lim.gridy = 3;
                                gblayout.setConstraints(Counter200, lim);
                                p.add(Counter200); } 
                                //lim.gridx = 0;
                                //lim.gridy = 4;
                                //gblayout.setConstraints(Counter360, lim);
                                //p.add(Counter360);
                                lim.gridx = 0;
                                lim.gridy = 5;
                                gblayout.setConstraints(
                               dataOraIntervento.dataOraCorrente, lim);
                                p.add(dataOraIntervento.dataOraCorrente);

                          f.pack();
                          f.setLocationRelativeTo(null);
                          f.setSize(380,220);
                          f.setVisible(true);                               
                        } 

//this class deals with the CHARGE button
/*private class Charge implements ActionListener {
public void actionPerformed(java.awt.event.ActionEvent f){
            new Thread(new thread1()).start();
        display.setText("Charging....");
            }
    
    public class thread1 implements Runnable{
            public void run(){
        for (int i=0; i<=100; i++){
                pbar.setValue(i); 
                pbar.repaint(); 
                try{Thread.sleep(20);}
                catch (InterruptedException err){}
         if(i==100){
            display.setText("Charged"); 
            release.setEnabled(true);
                }   
            }
        }       
    }   
} */

//}//end Action performed
//}//end action listener

}
     
    } 